[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Continu inzicht toolbox",
    "section": "",
    "text": "Waterkeringbeheerders zijn gewend om hun waterkeringen te laten voldoen aan vastgestelde normen: daar baseren ze het ontwerp en hun beheer en onderhoud op. In een situatie met extreme droogte of extreem hoge waterstanden is er meer nodig. Dan is het belangrijk continu inzicht te hebben in de actuele risico’s voor het gebied in de eerstvolgende dagen. De methode ‘continu inzicht’ is precies daarop gericht: ervoor zorgen dat de beheerder 24/7 in control is. Met slimme monitoring en rekenmodellen wordt de actuele situatie geanalyseerd. De beheerder ziet hoe groot het risico is en waar de zwakke plekken zitten, zodat hij of zij gericht maatregelen kan nemen. Doormiddel van deze python toolbox worden de systemen ‘continu inzicht’ aangeboden. Op deze wiki zal de komende tijd meer verschijnen over het project."
  },
  {
    "objectID": "reference/base.html",
    "href": "reference/base.html",
    "title": "base",
    "section": "",
    "text": "base\n\n\n\n\n\nName\nDescription\n\n\n\n\nConfig\nBasis functie om de configuratie in te laden.\n\n\nDataAdapter\nBasis DataAdapter\n\n\n\n\n\nbase.Config()\nBasis functie om de configuratie in te laden.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nconfig_path\n\nPad naar een .yaml bestand waarin per functie staat beschreven wat de in/ouput bestanden zijn\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nlees_config\nLaad het gegeven pad in, zet de configuraties klaar in de Config class\n\n\n\n\n\nbase.Config.lees_config()\nLaad het gegeven pad in, zet de configuraties klaar in de Config class\n\n\n\n\n\nbase.DataAdapter()\nBasis DataAdapter\n\n\n\n\n\nName\nDescription\n\n\n\n\ninput\nGegeven het config, stuurt de juiste input waarde aan\n\n\ninput_csv\nLaat een csv bestand in gegeven een pad\n\n\ninput_postgresql\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\noutput\nGegeven het config, stuurt de juiste input waarde aan\n\n\noutput_csv\nschrijft een csv bestand in gegeven een pad\n\n\noutput_postgresql\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\n\n\n\nbase.DataAdapter.input(functie, **opties)\nGegeven het config, stuurt de juiste input waarde aan\n\n\nfunctie: str naam van de functie die bij het bestands type hoort\nopties: dict extra informatie die ook naar de functie moet om het bestand te lezen\n\n\n\n\nbase.DataAdapter.input_csv(path, **opties)\nLaat een csv bestand in gegeven een pad\n\n\npd.Dataframe\n\n\n\n\nbase.DataAdapter.input_postgresql(path, **opties)\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\npath: Path pad naar het credentials bestand schema: str naam van het schema in de postgresql database table: str naam van de tabel in de postgresql database\n\n\n\nIn het credential bestand moet staan: user: str password: str host: str port: str database: str\n\n\n\npd.Dataframe\n\n\n\n\nbase.DataAdapter.output(functie, df, **opties)\nGegeven het config, stuurt de juiste input waarde aan\n\n\nfunctie: str naam van de functie die bij het bestands type hoort df: pd.Dataframe pandas dataframe om weg te schrijvne\nopties: dict extra informatie die ook naar de functie moet om het bestand te schrijven\n\n\n\n\nbase.DataAdapter.output_csv(path, df, **opties)\nschrijft een csv bestand in gegeven een pad\n\n\nGebruikt hiervoor de pandas.DataFrame.to_csv Opties om dit aan te passen kunnen worden mee gegeven in het configuratie bestand.\n\n\n\nNone\n\n\n\n\nbase.DataAdapter.output_postgresql(path, df, **opties)\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\ndf: pd.Dataframe dataframe met data om weg te schrijven path: Path pad naar het credentials bestand opties: dict dictionary met extra opties waar onder: schema: str naam van het schema in de postgresql database table: str naam van de tabel in de postgresql database\n\n\n\nIn het credential bestand moet staan: user: str password: str host: str port: str database: str\n\n\n\nNone"
  },
  {
    "objectID": "reference/base.html#classes",
    "href": "reference/base.html#classes",
    "title": "base",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nConfig\nBasis functie om de configuratie in te laden.\n\n\nDataAdapter\nBasis DataAdapter\n\n\n\n\n\nbase.Config()\nBasis functie om de configuratie in te laden.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nconfig_path\n\nPad naar een .yaml bestand waarin per functie staat beschreven wat de in/ouput bestanden zijn\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nlees_config\nLaad het gegeven pad in, zet de configuraties klaar in de Config class\n\n\n\n\n\nbase.Config.lees_config()\nLaad het gegeven pad in, zet de configuraties klaar in de Config class\n\n\n\n\n\nbase.DataAdapter()\nBasis DataAdapter\n\n\n\n\n\nName\nDescription\n\n\n\n\ninput\nGegeven het config, stuurt de juiste input waarde aan\n\n\ninput_csv\nLaat een csv bestand in gegeven een pad\n\n\ninput_postgresql\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\noutput\nGegeven het config, stuurt de juiste input waarde aan\n\n\noutput_csv\nschrijft een csv bestand in gegeven een pad\n\n\noutput_postgresql\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\n\n\n\nbase.DataAdapter.input(functie, **opties)\nGegeven het config, stuurt de juiste input waarde aan\n\n\nfunctie: str naam van de functie die bij het bestands type hoort\nopties: dict extra informatie die ook naar de functie moet om het bestand te lezen\n\n\n\n\nbase.DataAdapter.input_csv(path, **opties)\nLaat een csv bestand in gegeven een pad\n\n\npd.Dataframe\n\n\n\n\nbase.DataAdapter.input_postgresql(path, **opties)\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\npath: Path pad naar het credentials bestand schema: str naam van het schema in de postgresql database table: str naam van de tabel in de postgresql database\n\n\n\nIn het credential bestand moet staan: user: str password: str host: str port: str database: str\n\n\n\npd.Dataframe\n\n\n\n\nbase.DataAdapter.output(functie, df, **opties)\nGegeven het config, stuurt de juiste input waarde aan\n\n\nfunctie: str naam van de functie die bij het bestands type hoort df: pd.Dataframe pandas dataframe om weg te schrijvne\nopties: dict extra informatie die ook naar de functie moet om het bestand te schrijven\n\n\n\n\nbase.DataAdapter.output_csv(path, df, **opties)\nschrijft een csv bestand in gegeven een pad\n\n\nGebruikt hiervoor de pandas.DataFrame.to_csv Opties om dit aan te passen kunnen worden mee gegeven in het configuratie bestand.\n\n\n\nNone\n\n\n\n\nbase.DataAdapter.output_postgresql(path, df, **opties)\nSchrijft data naar een postgresql database gegeven het pad naar een credential bestand.\n\n\ndf: pd.Dataframe dataframe met data om weg te schrijven path: Path pad naar het credentials bestand opties: dict dictionary met extra opties waar onder: schema: str naam van het schema in de postgresql database table: str naam van de tabel in de postgresql database\n\n\n\nIn het credential bestand moet staan: user: str password: str host: str port: str database: str\n\n\n\nNone"
  },
  {
    "objectID": "reference/modules.voorbeeld_module.html",
    "href": "reference/modules.voorbeeld_module.html",
    "title": "modules.voorbeeld_module",
    "section": "",
    "text": "modules.voorbeeld_module\n\n\n\n\n\nName\nDescription\n\n\n\n\nWaardesDelenTwee\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\nWaardesKeerTwee\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\n\n\n\nmodules.voorbeeld_module.WaardesDelenTwee()\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\n\n\n\nName\nDescription\n\n\n\n\ndelen_door_twee\nVermenigvuldigd de meetstation waardes met 2 als voorbeeld\n\n\nrun\nRunt de funcies en stuur de df terug\n\n\n\n\n\nmodules.voorbeeld_module.WaardesDelenTwee.delen_door_twee(df)\nVermenigvuldigd de meetstation waardes met 2 als voorbeeld\n\n\n\nmodules.voorbeeld_module.WaardesDelenTwee.run()\nRunt de funcies en stuur de df terug\n\n\n\n\n\nmodules.voorbeeld_module.WaardesKeerTwee()\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\n\n\n\nName\nDescription\n\n\n\n\nkeer_twee\nDeelt de meetstation waardes door 2 als voorbeeld\n\n\nrun\nRunt de funcies en stuur de df terug\n\n\n\n\n\nmodules.voorbeeld_module.WaardesKeerTwee.keer_twee(df)\nDeelt de meetstation waardes door 2 als voorbeeld\n\n\n\nmodules.voorbeeld_module.WaardesKeerTwee.run()\nRunt de funcies en stuur de df terug"
  },
  {
    "objectID": "reference/modules.voorbeeld_module.html#classes",
    "href": "reference/modules.voorbeeld_module.html#classes",
    "title": "modules.voorbeeld_module",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nWaardesDelenTwee\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\nWaardesKeerTwee\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\n\n\n\nmodules.voorbeeld_module.WaardesDelenTwee()\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\n\n\n\nName\nDescription\n\n\n\n\ndelen_door_twee\nVermenigvuldigd de meetstation waardes met 2 als voorbeeld\n\n\nrun\nRunt de funcies en stuur de df terug\n\n\n\n\n\nmodules.voorbeeld_module.WaardesDelenTwee.delen_door_twee(df)\nVermenigvuldigd de meetstation waardes met 2 als voorbeeld\n\n\n\nmodules.voorbeeld_module.WaardesDelenTwee.run()\nRunt de funcies en stuur de df terug\n\n\n\n\n\nmodules.voorbeeld_module.WaardesKeerTwee()\nVoorbeeld class die laat zien hoe de arcitectuur werkt\n\n\n\n\n\nName\nDescription\n\n\n\n\nkeer_twee\nDeelt de meetstation waardes door 2 als voorbeeld\n\n\nrun\nRunt de funcies en stuur de df terug\n\n\n\n\n\nmodules.voorbeeld_module.WaardesKeerTwee.keer_twee(df)\nDeelt de meetstation waardes door 2 als voorbeeld\n\n\n\nmodules.voorbeeld_module.WaardesKeerTwee.run()\nRunt de funcies en stuur de df terug"
  },
  {
    "objectID": "reference/continu_inzicht_toolbox.html",
    "href": "reference/continu_inzicht_toolbox.html",
    "title": "continu_inzicht_toolbox",
    "section": "",
    "text": "continu_inzicht_toolbox\n\n\n\n\n\nName\nDescription\n\n\n\n\nPlaceHolder\nPlaceholder class to show how pydantic would work\n\n\n\n\n\ncontinu_inzicht_toolbox.PlaceHolder()\nPlaceholder class to show how pydantic would work\n\n\n\n\n\nName\nDescription\n\n\n\n\ncount_placeholders_length\nCounts the length of the placeholders of the class\n\n\nprint_placeholders\nPrints the placeholders of the class\n\n\n\n\n\ncontinu_inzicht_toolbox.PlaceHolder.count_placeholders_length()\nCounts the length of the placeholders of the class\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nNone\n\n\nrequired\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\nint\nNumber of charaters placeholders are.\n\n\n\n\n\n\n\ncontinu_inzicht_toolbox.PlaceHolder.print_placeholders(n)\nPrints the placeholders of the class\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nn\nint\nNumber of times to print statement\nrequired\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\nNone"
  },
  {
    "objectID": "reference/continu_inzicht_toolbox.html#classes",
    "href": "reference/continu_inzicht_toolbox.html#classes",
    "title": "continu_inzicht_toolbox",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nPlaceHolder\nPlaceholder class to show how pydantic would work\n\n\n\n\n\ncontinu_inzicht_toolbox.PlaceHolder()\nPlaceholder class to show how pydantic would work\n\n\n\n\n\nName\nDescription\n\n\n\n\ncount_placeholders_length\nCounts the length of the placeholders of the class\n\n\nprint_placeholders\nPrints the placeholders of the class\n\n\n\n\n\ncontinu_inzicht_toolbox.PlaceHolder.count_placeholders_length()\nCounts the length of the placeholders of the class\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nNone\n\n\nrequired\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\nint\nNumber of charaters placeholders are.\n\n\n\n\n\n\n\ncontinu_inzicht_toolbox.PlaceHolder.print_placeholders(n)\nPrints the placeholders of the class\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nn\nint\nNumber of times to print statement\nrequired\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\nNone"
  },
  {
    "objectID": "reference/modules.html",
    "href": "reference/modules.html",
    "title": "modules",
    "section": "",
    "text": "modules\nmodules\nexample class"
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "API Reference",
    "section": "",
    "text": "base\n\n\n\nmodules.voorbeeld_module"
  },
  {
    "objectID": "reference/index.html#continu-inzicht",
    "href": "reference/index.html#continu-inzicht",
    "title": "API Reference",
    "section": "",
    "text": "base\n\n\n\nmodules.voorbeeld_module"
  }
]