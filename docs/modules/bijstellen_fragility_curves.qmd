---
title: "Bijstellen fragility curves"
---

### Verschuiven van een curve

Voor het verschuiven van een fragility curve over een opgegeven waterstandsbereik is voor alle type fragility curves de functie `Shift*` beschikbaar, `*` de naam van de functie is.
Zo schuift `ShiftFragilityCurveOvertopping` de curve van `FragilityCurveOvertopping` naar links of rechts met een opgegeven stapgrootte (bijv. 0,5 voor een verschuiving van de fragility curve met 0,5m naar rechts). Belangrijk om hier te benoemen is dat de opties in GlobalVariables nog steeds moeten verwijzen naar de originele functie, ook alle andere configuraties blijven hetzelfde. 

In het voorbeeld hieronder wordt gebruik gemaakt van`FragilityCurveOvertopping` in de GlobalVariables, ook al wordt de `ShiftFragilityCurveOvertopping` functie aangeroepen.

::: {.panel-tabset}
## Configuratie
```yaml
GlobalVariables:
    rootdir: "data_sets"
    # default waardes, kunnen worden overschreven
    FragilityCurveOvertopping:
        gh_onz_mu: 0.96
        gh_onz_sigma: 0.27
        gp_onz_mu_tp: 1.03
        gp_onz_sigma_tp: 0.13
        gp_onz_mu_tspec: 1.03
        gp_onz_sigma_tspec: 0.13
        gh_onz_aantal: 7
        gp_onz_aantal: 7
        tp_tspec: 1.1
        lower_limit_coarse: 4.0
        upper_limit_coarse: 2.0
        upper_limit_fine: 1.0
        hstap: 0.05

DataAdapter:
    default_options:
        csv:
            sep: ","
    slopes:
        type: csv
        file: "slopes.csv"
    profiles:
        type: csv
        file: "profiles.csv"
    bedlevel_fetch:
        type: csv
        file: "bedlevelfetch.csv"
    fragility_curves:
        type: csv
        file: "fragility_curves.csv"
```
## Code
```python
from toolbox_continu_inzicht import Config, DataAdapter
from toolbox_continu_inzicht.fragility_curves import ShiftFragilityCurveOvertopping

config = Config(config_path="config.yaml")
config.lees_config()
data_adapter = DataAdapter(config=config)
shifted_fragility_curve_overtopping = ShiftFragilityCurveOvertopping(data_adapter=data_adapter)
shifted_fragility_curve_overtopping.run(
    input=["slopes", "profiles", "bedlevel_fetch"],
    output="fragility_curves",
    effect=0.5
)

```
:::

### Aanpassen van de kruinhoogte

Voor het aanpassen van de kruinhoogte bij een [GEKB](#sec-Bepalen-fragility-curves-GEKB) is de functie `ChangeCrestHeightFragilityCurveOvertopping` beschikbaar, hier kan als effect mee gegeven worden wat de verandering van kruinhoogte is. De zelfde berekening als bij `FragilityCurveOvertopping` wordt dan uitgevoerd, maar met de aangepaste kruin hoogte.

::: {.panel-tabset}
## Configuratie
```yaml
GlobalVariables:
    rootdir: "data_sets"

    # default waardes, kunnen worden overschreven
    FragilityCurveOvertopping:
        gh_onz_mu: 0.96
        gh_onz_sigma: 0.27
        gp_onz_mu_tp: 1.03
        gp_onz_sigma_tp: 0.13
        gp_onz_mu_tspec: 1.03
        gp_onz_sigma_tspec: 0.13
        gh_onz_aantal: 7
        gp_onz_aantal: 7
        tp_tspec: 1.1
        lower_limit_coarse: 4.0
        upper_limit_coarse: 2.0
        upper_limit_fine: 1.0
        hstap: 0.05

DataAdapter:
    default_options:
        csv:
            sep: ","
    slopes:
        type: csv
        file: "slopes.csv"
    profiles:
        type: csv
        file: "profiles.csv"
    bedlevel_fetch:
        type: csv
        file: "bedlevelfetch.csv"
    fragility_curves:
        type: csv
        file: "fragility_curves.csv"

```
## Code
```python
from toolbox_continu_inzicht import Config, DataAdapter
from toolbox_continu_inzicht.fragility_curves import ChangeCrestHeightFragilityCurveOvertopping

config = Config(config_path="config.yaml")
config.lees_config()
data_adapter = DataAdapter(config=config)
change_crest_fragility_curve_overtopping = ChangeCrestHeightFragilityCurveOvertopping(data_adapter=data_adapter)
change_crest_fragility_curve_overtopping.run(
    input=["slopes", "profiles", "bedlevel_fetch"],
    output="fragility_curves",
    effect=1
)

```
:::
