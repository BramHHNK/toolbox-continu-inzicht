# base { #continu_inzicht_toolbox.base }

`base`



## Classes

| Name | Description |
| --- | --- |
| [Config](#continu_inzicht_toolbox.base.Config) | Basis functie om de configuratie in te laden. |
| [DataAdapter](#continu_inzicht_toolbox.base.DataAdapter) | Basis DataAdapter |

### Config { #continu_inzicht_toolbox.base.Config }

`base.Config()`

Basis functie om de configuratie in te laden.

#### Parameters

| Name          | Type   | Description                                                                                      | Default    |
|---------------|--------|--------------------------------------------------------------------------------------------------|------------|
| `config_path` |        | Pad naar een  `.yaml` bestand waarin per functie staat beschreven wat de in/ouput bestanden zijn | _required_ |

#### Methods

| Name | Description |
| --- | --- |
| [lees_config](#continu_inzicht_toolbox.base.Config.lees_config) | Laad het gegeven pad in, zet de configuraties klaar in de Config class |

##### lees_config { #continu_inzicht_toolbox.base.Config.lees_config }

`base.Config.lees_config()`

Laad het gegeven pad in, zet de configuraties klaar in de Config class

### DataAdapter { #continu_inzicht_toolbox.base.DataAdapter }

`base.DataAdapter()`

Basis DataAdapter

#### Methods

| Name | Description |
| --- | --- |
| [input](#continu_inzicht_toolbox.base.DataAdapter.input) | Gegeven het config, stuurt de juiste input waarde aan |
| [input_csv](#continu_inzicht_toolbox.base.DataAdapter.input_csv) | Laat een csv bestand in gegeven een pad |
| [input_postgresql](#continu_inzicht_toolbox.base.DataAdapter.input_postgresql) | Schrijft data naar een postgresql database gegeven het pad naar een credential bestand. |
| [output](#continu_inzicht_toolbox.base.DataAdapter.output) | Gegeven het config, stuurt de juiste input waarde aan |
| [output_csv](#continu_inzicht_toolbox.base.DataAdapter.output_csv) | schrijft een csv bestand in gegeven een pad |
| [output_postgresql](#continu_inzicht_toolbox.base.DataAdapter.output_postgresql) | Schrijft data naar een postgresql database gegeven het pad naar een credential bestand. |

##### input { #continu_inzicht_toolbox.base.DataAdapter.input }

`base.DataAdapter.input(functie, **opties)`

Gegeven het config, stuurt de juiste input waarde aan

###### Parameters:

functie: str
         naam van de functie die bij het bestands type hoort

opties: dict
          extra informatie die ook naar de functie moet om het bestand te lezen

##### input_csv { #continu_inzicht_toolbox.base.DataAdapter.input_csv }

`base.DataAdapter.input_csv(path, **opties)`

Laat een csv bestand in gegeven een pad

###### Returns:

pd.Dataframe

##### input_postgresql { #continu_inzicht_toolbox.base.DataAdapter.input_postgresql }

`base.DataAdapter.input_postgresql(path, **opties)`

Schrijft data naar een postgresql database gegeven het pad naar een credential bestand.

###### Parametes:

path: Path
      pad naar het credentials bestand
schema: str
        naam van het schema in de postgresql database
table: str
       naam van de tabel in de postgresql database

###### Notes:

In het credential bestand moet staan:
user: str
password: str
host: str
port: str
database: str

###### Returns:

pd.Dataframe

##### output { #continu_inzicht_toolbox.base.DataAdapter.output }

`base.DataAdapter.output(functie, df, **opties)`

Gegeven het config, stuurt de juiste input waarde aan

###### Parameters:

functie: str
         naam van de functie die bij het bestands type hoort
df: pd.Dataframe
    pandas dataframe om weg te schrijvne

opties: dict
        extra informatie die ook naar de functie moet om het bestand te schrijven

##### output_csv { #continu_inzicht_toolbox.base.DataAdapter.output_csv }

`base.DataAdapter.output_csv(path, df, **opties)`

schrijft een csv bestand in gegeven een pad

###### Notes:

Gebruikt hiervoor de pandas.DataFrame.to_csv
Opties om dit aan te passen kunnen worden mee gegeven in het configuratie bestand.

###### Returns:

None

##### output_postgresql { #continu_inzicht_toolbox.base.DataAdapter.output_postgresql }

`base.DataAdapter.output_postgresql(path, df, **opties)`

Schrijft data naar een postgresql database gegeven het pad naar een credential bestand.

###### Parametes:

df: pd.Dataframe
    dataframe met data om weg te schrijven
path: Path
      pad naar het credentials bestand
opties: dict
        dictionary met extra opties waar onder:
            schema: str
                    naam van het schema in de postgresql database
            table: str
                naam van de tabel in de postgresql database

###### Notes:

In het credential bestand moet staan:
user: str
password: str
host: str
port: str
database: str

###### Returns:

None